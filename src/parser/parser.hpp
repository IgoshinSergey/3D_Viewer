#ifndef CPP4_3DVIEWER_V2_0_1_SRC_PARSER_HPP_
#define CPP4_3DVIEWER_V2_0_1_SRC_PARSER_HPP_

/************************************************************
 * @file parser.hpp
 * @brief Рализация парсинга через паттерн "Стратегия"
 ************************************************************/

#include <fstream>
#include <memory>
#include <sstream>

#include "../object/object.hpp"

namespace s21 {

/************************************************************
 * Базовый класс для стратегии парсинга obj файла
 * @brief Содержит виртуальный метод парсинга.
 ************************************************************/
class ParsingStrategy {
 public:
  /************************************************************
   * @brief Виртуальный метод для парсинга вершин
   * @param line Ссылка на строчку, считанную из obj файла
   * @return void
   ************************************************************/
  virtual void parse(const std::string& line) const = 0;
};

/************************************************************
 * Класс стратегии парсинга вершин из obj файла
 * @brief Содержит метод для парсинга вершин и сохраняет в данные в класс Object
 ************************************************************/
class ParsingVertex : public ParsingStrategy {
 public:
  /************************************************************
   * @brief Ссылка на класс, в котором храним всю информацию о 3д моделе
   ************************************************************/
  Object& object;

  /************************************************************
   * @brief Параметризированный конструскор
   * @param object Ссылка на класс, в котором храним всю информацию о 3д моделе
   ************************************************************/
  ParsingVertex(Object& object);

  /************************************************************
   * @brief Переопределенный метод для парсинга вершин
   * @param line Ссылка на строчку, считанную из obj файла
   * @return void
   ************************************************************/
  void parse(const std::string& line) const override;
};

/************************************************************
 * Класс стратегии парсинга фасетов (полигонов) из obj файла
 * @brief Содержит метод для парсинга фасетов (полигонов) и сохраняет в данные в
 *класс Object
 ************************************************************/
class ParsingLine : public ParsingStrategy {
 public:
  /************************************************************
   * @brief Ссылка на класс, в котором храним всю информацию о 3д моделе
   ************************************************************/
  Object& object;

  /************************************************************
   * @brief Параметризированный конструскор
   * @param object Ссылка на класс, в котором храним всю информацию о 3д моделе
   ************************************************************/
  ParsingLine(Object& object);

  /************************************************************
   * @brief Переопределенный метод для парсинга фасетов (полигонов)
   * @param line Ссылка на строчку, считанную из obj файла
   * @return void
   ************************************************************/
  void parse(const std::string& line) const override;
};

/************************************************************
 * Класс для реализации паттерна "Стратегия"
 * @brief Содержит метод для файла
 ************************************************************/
class ObjectParser {
 private:
  /************************************************************
   * @brief Умный указатель, который указывает на текущую стратегию парсинга
   ************************************************************/
  std::unique_ptr<ParsingStrategy> currentStrategy;

  /************************************************************
   * @brief Метод для смены текущей стратегии парсинга
   * @param strategy Стратегия для парсинга текущей строки
   * @return void
   ************************************************************/
  void set_strategy(std::unique_ptr<ParsingStrategy>&& strategy);

 public:
  /************************************************************
   * @brief Конструскор по умолчанию
   ************************************************************/
  ObjectParser();

  /************************************************************
   * @brief Деструктор
   ************************************************************/
  ~ObjectParser();

  /************************************************************
   * @brief Метод для парсинга файла
   * @param object Объект в котором будет сохраняться информация о 3д моделе
   * @param filename Путь до файла, который будем парсить
   * @return void
   ************************************************************/
  void parseFile(Object& object, const std::string& filename);
};

}  // namespace s21

#endif  // CPP4_3DVIEWER_V2_0_1_SRC_PARSER_HPP_
